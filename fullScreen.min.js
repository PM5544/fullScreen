/*
DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
Version 2, December 2004

Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>

Everyone is permitted to copy and distribute verbatim or modified
copies of this license document, and changing it is allowed as long
as the name is changed.

DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

0. You just DO WHAT THE FUCK YOU WANT TO.
*/

// do GitHub a favour and don't hotlink it from http://pm5544.github.io/fullScreen/fullscreen.js
var fullScreen=function(doc,body,undefined){var prefixes=["ms","o","","webkit","moz"],nodeAPIs=["request_"],docAPIs=["cancel_","_element","_enabled","_","is_"],fullScreenVariants=["fullscreen","fullScreen"],slice=Array.prototype.slice,supported={},caseConversion={fullscreenenabled:"fullScreenEnabled",fullscreenelement:"fullScreenElement",requestfullscreen:"requestFullScreen",cancelfullscreen:"cancelFullScreen",fullscreen:"fullScreen",isfullscreen:"fullScreen"},handlers=[],api,len,prefix,supportedPrefix;function noSupport(){body.className+="fullSreenNotEnabled";return{requestFullScreen:Function.prototype,cancelFullScreen:Function.prototype,fullscreenchange:Function.prototype,addEventListener:Function.prototype,fullScreenElement:undefined,fullScreenEnabled:false,fullScreen:false}}if(!Array.prototype.forEach||!doc.querySelector){return noSupport()}var glue=function(){var capitalizedCacheObject={};return function(glue1,glue2){if(!capitalizedCacheObject[glue2]){capitalizedCacheObject[glue2]=""+glue2.substring(0,1).toUpperCase()+glue2.substring(1)}if(glue1.length){return glue1+capitalizedCacheObject[glue2]}return glue2}}();function replace_(){var arg=slice.call(arguments),returnArray=[],str=arg[0],inFront="_"===str[0];arg[1].forEach(function(el){if(inFront){returnArray.push(glue(el,str.replace("_","")))}else{returnArray.push(glue(str.replace("_",""),el))}});return returnArray}function checkSupport(){var docAPINames=[],nodeAPINames=[],foundSupport=false;docAPIs.forEach(function(docAPI){docAPINames=docAPINames.concat(replace_(docAPI,fullScreenVariants))});docAPINames.forEach(function(docAPIName){var str=glue(prefix,docAPIName);if(undefined!==doc[str]){supported[caseConversion[docAPIName.toLowerCase()]]=str;foundSupport=true}});nodeAPIs.forEach(function(docAPI){nodeAPINames=nodeAPINames.concat(replace_(docAPI,fullScreenVariants))});nodeAPINames.forEach(function(nodeAPIName){var str=glue(prefix,nodeAPIName);if(undefined!==body[str]){supported[caseConversion[nodeAPIName.toLowerCase()]]=str;foundSupport=true}});return foundSupport}len=prefixes.length;while(prefix=prefixes[--len]){if(checkSupport(prefix)){supportedPrefix=prefix;break}}if(!supported.fullScreenEnabled){return noSupport()}api={requestFullScreen:function(node){(node||fullScreenElement)[supported.requestFullScreen]()},cancelFullScreen:function(node){doc[supported.cancelFullScreen]()},fullScreenElement:undefined,fullScreenEnabled:true,fullScreen:false,fullscreenchange:function(fn,context){handlers.push([fn,context])},addEventListener:function(node,_event,_element){var event,element;if(!node){return}event=_event||"click";element=_element||fullScreenElement;node.addEventListener(event,function(){if(!api.fullScreen){api.requestFullScreen(element)}else{api.cancelFullScreen()}})}};doc.addEventListener(supportedPrefix+"fullscreenchange",function(e){api.fullScreenElement=doc[supported.fullScreenElement];api.fullScreen=!!api.fullScreenElement;handlers.forEach(function(ar){ar[0].call(ar[1]||window,api.fullScreen)})});document.documentElement.classList.add("fullScreenEnabled");var fullScreenElement=doc.querySelector("#fullScreenElement");slice.call(doc.querySelectorAll(".fullScreenToggle")).forEach(function(elem){api.addEventListener(elem)});return api}(document,document.body);